<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:PungHouse"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="PungHouse.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionary1.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <!--<ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Dictionary3.xaml"/>
            </ResourceDictionary.MergedDictionaries>-->
            <!--
            This Style Controls the ExitButton Style
            -->
            <SolidColorBrush x:Key="ExitButton.Static.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Static.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Static.Foreground" Color="#c23616"/>
            <SolidColorBrush x:Key="ExitButton.MouseOver.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.MouseOver.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.MouseOver.Foreground" Color="#e84118"/>
            <SolidColorBrush x:Key="ExitButton.Pressed.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Pressed.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Pressed.Foreground" Color="#B0e84118"/>
            <SolidColorBrush x:Key="ExitButton.Disabled.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="ExitButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="ExitButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource ExitButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ExitButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource ExitButton.MouseOver.Foreground}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource ExitButton.Pressed.Foreground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource ExitButton.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ExitButton.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource ExitButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 
            
            This Style Controls the Minimize Button Style
            
            -->
            <SolidColorBrush x:Key="MinimizeButton.Static.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Static.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Static.Foreground" Color="#192a56"/>
            <SolidColorBrush x:Key="MinimizeButton.MouseOver.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.MouseOver.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.MouseOver.Foreground" Color="#273c75"/>
            <SolidColorBrush x:Key="MinimizeButton.Pressed.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Pressed.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Pressed.Foreground" Color="#B0273c75"/>
            <SolidColorBrush x:Key="MinimizeButton.Disabled.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Disabled.Border" Color="Transparent"/>
            <SolidColorBrush x:Key="MinimizeButton.Disabled.Foreground" Color="Transparent"/>
            <Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource MinimizeButton.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource MinimizeButton.Static.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource MinimizeButton.MouseOver.Foreground}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="TextElement.Foreground" TargetName="border" Value="{StaticResource MinimizeButton.Pressed.Foreground}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource MinimizeButton.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource MinimizeButton.Disabled.Border}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource MinimizeButton.Disabled.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
            
            ButtonStyle[0] This Style Controls the Green Button Style
            
            -->
            <SolidColorBrush x:Key="Button.Static.Background0" Color="red"/>
            <SolidColorBrush x:Key="Button.Static.Border0" Color="Red"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background0" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border0" Color="#4cd137"/>
            <SolidColorBrush x:Key="Button.Pressed.Background0" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Pressed.Border0" Color="#B04cd137"/>
            <SolidColorBrush x:Key="Button.Disabled.Background0" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Border0" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground0" Color="Red"/>
            <Style x:Key="GreenButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background0}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border0}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background0}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border0}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background0}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border0}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background0}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border0}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground0}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 
            
            ButtonStyle[1] This Style Controls the Blue Button Style
            
            -->
            <SolidColorBrush x:Key="Button.Static.Background1" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Static.Border1" Color="#0097e6"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#00a8ff"/>
            <SolidColorBrush x:Key="Button.Pressed.Background1" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#B000a8ff"/>
            <SolidColorBrush x:Key="Button.Disabled.Background1" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Border1" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="Red"/>
            <Style x:Key="BlueButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
            
            ButtonStyle[2] This Style Controls the Red Button Style
            
            -->
            <SolidColorBrush x:Key="Button.Static.Background2" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Static.Border2" Color="#c23616"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#e84118"/>
            <SolidColorBrush x:Key="Button.Pressed.Background2" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#B0e84118"/>
            <SolidColorBrush x:Key="Button.Disabled.Background2" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Border2" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="Red"/>
            <Style x:Key="RedButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--- 
            
            ButtonStyle[3] This Style Controls The Profile Button Style
            
            -->
            <SolidColorBrush x:Key="Button.Static.Background3" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Static.Border3" Color="#273c75"/>
            <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#e84118"/>
            <SolidColorBrush x:Key="Button.Pressed.Background3" Color="Transparent"/>
            <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#B0e84118"/>
            <SolidColorBrush x:Key="Button.Disabled.Background3" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Border3" Color="Red"/>
            <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="Red"/>
            <Style x:Key="ProfileButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="{StaticResource Button.Static.Background3}"/>
                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border3}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsDefaulted" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background3}"/>
                                    <Setter Property="Cursor" Value="Hand"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border3}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background3}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border3}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background3}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border3}"/>
                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground3}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!---  
            
            This Style Controls The Purple TextBox Style
            
            -->
            <SolidColorBrush x:Key="PurpleTextBox.Enabled.Border" Color="#8c7ae6"/>
            <SolidColorBrush x:Key="PurpleTextBox.Enabled.Background" Color="Transparent"/>
            <SolidColorBrush x:Key="PurpleTextBox.MouseOver.Border" Color="#9c88ff"/>
            <SolidColorBrush x:Key="PurpleTextBox.Focus.Border" Color="#f5f6fa"/>
            <Style x:Key="PurpleTextBoxStyle" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="BorderBrush" Value="{StaticResource PurpleTextBox.Enabled.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{DynamicResource PurpleTextBox.Enabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PurpleTextBox.Enabled.Border}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PurpleTextBox.MouseOver.Border}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource PurpleTextBox.Focus.Border}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                            <Condition Property="IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    </MultiTrigger>
                </Style.Triggers>
            </Style>
            <!-- 
            
            This Style Controls the ListBox Style
            
            -->
            <SolidColorBrush x:Key="ListBox.Static.Background" Color="#7f8fa6"/>
            <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
            <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
            <Style x:Key="ListBoxStyle1" TargetType="{x:Type ListBox}">
                <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
                <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBox}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                    <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsGrouping" Value="true"/>
                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--
            
            This Style Controls the Schedule Calendar Style
            
            -->
            <Style x:Key="ScheduleCalendarPicker" TargetType="{x:Type DatePicker}">
                <Setter Property="Foreground" Value="#FF000000"/>
                <Setter Property="IsTodayHighlighted" Value="True"/>
                <Setter Property="SelectedDateFormat" Value="Short"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                            <GradientStop Color="Transparent" Offset="0"/>
                            <GradientStop Color="Transparent" Offset="0.375"/>
                            <GradientStop Color="Transparent" Offset="0.375"/>
                            <GradientStop Color="Transparent" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.Resources>
                                        <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                        <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Height="60" Width="64">
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition GeneratedDuration="0"/>
                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                            <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Pressed">
                                                            <Storyboard>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                                    <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                                <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                                    <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                                </ColorAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Disabled"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="60" Margin="0" VerticalAlignment="Bottom" Width="64">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                        <ColumnDefinition Width="20*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="23*"/>
                                                        <RowDefinition Height="19*"/>
                                                        <RowDefinition Height="19*"/>
                                                        <RowDefinition Height="19*"/>
                                                    </Grid.RowDefinitions>
                                                    <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-25.5,-25,-38.5,-43" Opacity="0" Grid.Row="0" Grid.RowSpan="4" RenderTransformOrigin="0.5,0.5" d:IsHidden="True" Visibility="Collapsed"/>
                                                    <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="-25.5,-25,-38.5,-43" Opacity="1" Grid.Row="0" Grid.RowSpan="4" d:IsHidden="True" Visibility="Collapsed"/>
                                                    <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="-25.5,-25,-38.5,-43" Opacity="1" Grid.Row="0" Grid.RowSpan="4" d:IsHidden="True" Visibility="Collapsed">
                                                        <Border.Background>
                                                            <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                                <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                                <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                                <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                                <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Border.Background>
                                                    </Border>
                                                    <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1" Height="22.161" Margin="-25.5,-25,-38.5,0" VerticalAlignment="Top" d:IsHidden="True" Visibility="Collapsed">
                                                        <Rectangle.Fill>
                                                            <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                                <GradientStop Color="#FF4084BD"/>
                                                                <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Fill>
                                                        <Rectangle.Stroke>
                                                            <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                                <GradientStop Color="#FF494949"/>
                                                                <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                            </LinearGradientBrush>
                                                        </Rectangle.Stroke>
                                                    </Rectangle>
                                                    <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="-7.524,1.272,-7.524,-9.572" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center" Height="21.125" Width="34.048"/>
                                                    <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4" Margin="-25.5,-25,-38.5,-43"/>
                                                    <Canvas Margin="-25.5,-25,-38.5,-43" Width="128" Height="128" Grid.ColumnSpan="4" Grid.RowSpan="4">
                                                        <Canvas.Background>
                                                            <ImageBrush ImageSource="calendar1.png"/>
                                                        </Canvas.Background>
                                                    </Canvas>
                                                    <Ellipse Grid.ColumnSpan="1" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="21.671" StrokeThickness="0" VerticalAlignment="Center" Width="21.666" Grid.Column="2" Margin="-4.642,-21.838,-1.024,17.417"/>
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Button x:Name="PART_Button" Grid.Column="0" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Left" Margin="-24.458,83.937,0,-128" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="Top" Width="68.958" Height="62.063" d:LayoutOverrides="HorizontalAlignment">
                                        <Button.Background>
                                            <ImageBrush ImageSource="calendar.png" Stretch="Uniform"/>
                                        </Button.Background>
                                    </Button>
                                    <DatePickerTextBox x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" HorizontalContentAlignment="Stretch" Grid.Row="0" VerticalContentAlignment="Center" Margin="0,-2.007,0,-29" VerticalAlignment="Bottom" Padding="10,0" Height="49.007" Background="{x:Null}" HorizontalAlignment="Left" Width="480.5" FontSize="36"/>
                                    <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1" Margin="0,0,0,-29"/>
                                        <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="Auto" Margin="-35.978,0,-0.334,-16.401" RadiusY="1" Grid.Row="0" RadiusX="1" Width="Auto"/>
                                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False" Margin="0,0,0,-29"/>
                                    </Grid>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                                    <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                                </DataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!-- 
            
            This Style Controls the Calendar
            
            -->
            <Style x:Key="BigCalendarViewStyle" TargetType="{x:Type Calendar}">
                <Setter Property="Foreground" Value="#FF333333"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFE4EAF0" Offset="0"/>
                            <GradientStop Color="#FFECF0F4" Offset="0.16"/>
                            <GradientStop Color="#FFFCFCFD" Offset="0.16"/>
                            <GradientStop Color="#FFFFFFFF" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderBrush">
                    <Setter.Value>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA3AEB9" Offset="0"/>
                            <GradientStop Color="#FF8399A9" Offset="0.375"/>
                            <GradientStop Color="#FF718597" Offset="0.375"/>
                            <GradientStop Color="#FF617584" Offset="1"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Calendar}">
                            <StackPanel x:Name="PART_Root" HorizontalAlignment="Center">
                                <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Style="{TemplateBinding CalendarItemStyle}"/>
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
